# Paths
set(P2PLite_ROOT "${CMAKE_CURRENT_LIST_DIR}/..")

set(P2PLite_RUNTIME_DIR "${P2PLite_ROOT}/bin")
set(P2PLite_INCLUDE_DIRS "${P2PLite_ROOT}/include")
if(WIN32)
    set(P2PLite_DYNAMIC_LIBRARY_DEBUG "${P2PLite_RUNTIME_DIR}/p2plite-d.dll")
    set(P2PLite_DYNAMIC_LIBRARY_RELEASE "${P2PLite_RUNTIME_DIR}/p2plite.dll")
    set(P2PLite_LIBRARIES_DEBUG "${P2PLite_ROOT}/lib/p2plite-d.lib")
    set(P2PLite_LIBRARIES_RELEASE "${P2PLite_ROOT}/lib/p2plite.lib")
elseif(APPLE)
    set(P2PLite_DYNAMIC_LIBRARY_DEBUG "${P2PLite_RUNTIME_DIR}/libp2plite-d.dylib")
    set(P2PLite_DYNAMIC_LIBRARY_RELEASE "${P2PLite_RUNTIME_DIR}/libp2plite.dylib")
else()
    set(P2PLite_DYNAMIC_LIBRARY_DEBUG "${P2PLite_RUNTIME_DIR}/libp2plite-d.so")
    set(P2PLite_DYNAMIC_LIBRARY_RELEASE "${P2PLite_RUNTIME_DIR}/libp2plite.so")
endif()

# Provide these variables to the calling project
include(FindPackageHandleStandardArgs)
if (WIN32)
    find_package_handle_standard_args(P2PLite DEFAULT_MSG P2PLite_LIBRARIES_DEBUG P2PLite_LIBRARIES_RELEASE P2PLite_INCLUDE_DIRS)
else ()
    find_package_handle_standard_args(P2PLite DEFAULT_MSG P2PLite_INCLUDE_DIRS)
endif ()

if(P2PLite_FOUND AND NOT TARGET P2PLite::P2PLite)
    add_library(P2PLite::P2PLite SHARED IMPORTED)
    set_target_properties(P2PLite::P2PLite PROPERTIES
            IMPORTED_LOCATION "${P2PLite_DYNAMIC_LIBRARY_RELEASE}"
            IMPORTED_LOCATION_DEBUG "${P2PLite_DYNAMIC_LIBRARY_DEBUG}"
            IMPORTED_LOCATION_RELEASE "${P2PLite_DYNAMIC_LIBRARY_RELEASE}"
            INTERFACE_INCLUDE_DIRECTORIES "${P2PLite_INCLUDE_DIRS}"
    )

    if(WIN32)
        set_target_properties(P2PLite::P2PLite PROPERTIES
                IMPORTED_IMPLIB "${P2PLite_LIBRARIES_RELEASE}"
                IMPORTED_IMPLIB_DEBUG "${P2PLite_LIBRARIES_DEBUG}"
                IMPORTED_IMPLIB_RELEASE "${P2PLite_LIBRARIES_RELEASE}"
        )
    endif()
endif()
